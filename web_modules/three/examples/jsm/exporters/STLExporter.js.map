{"version":3,"file":"STLExporter.js","sources":["../../../../../node_modules/three/examples/jsm/exporters/STLExporter.js"],"sourcesContent":["/**\n * @author kovacsv / http://kovacsv.hu/\n * @author mrdoob / http://mrdoob.com/\n * @author mudcube / http://mudcu.be/\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Usage:\n *  var exporter = new STLExporter();\n *\n *  // second argument is a list of options\n *  var data = exporter.parse( mesh, { binary: true } );\n *\n */\n\nimport {\n\tGeometry,\n\tMatrix3,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar STLExporter = function () {};\n\nSTLExporter.prototype = {\n\n\tconstructor: STLExporter,\n\n\tparse: ( function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar normalMatrixWorld = new Matrix3();\n\n\t\treturn function parse( scene, options ) {\n\n\t\t\tif ( options === undefined ) options = {};\n\n\t\t\tvar binary = options.binary !== undefined ? options.binary : false;\n\n\t\t\t//\n\n\t\t\tvar objects = [];\n\t\t\tvar triangles = 0;\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isMesh ) {\n\n\t\t\t\t\tvar geometry = object.geometry;\n\n\t\t\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tgeometry = new Geometry().fromBufferGeometry( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\t\ttriangles += geometry.faces.length;\n\n\t\t\t\t\t\tobjects.push( {\n\n\t\t\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\t\t\tmatrixWorld: object.matrixWorld\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( binary ) {\n\n\t\t\t\tvar offset = 80; // skip header\n\t\t\t\tvar bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4;\n\t\t\t\tvar arrayBuffer = new ArrayBuffer( bufferLength );\n\t\t\t\tvar output = new DataView( arrayBuffer );\n\t\t\t\toutput.setUint32( offset, triangles, true ); offset += 4;\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\t\t\t\t\tvar faces = object.geometry.faces;\n\t\t\t\t\tvar matrixWorld = object.matrixWorld;\n\n\t\t\t\t\tnormalMatrixWorld.getNormalMatrix( matrixWorld );\n\n\t\t\t\t\tfor ( var j = 0, jl = faces.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ j ];\n\n\t\t\t\t\t\tvector.copy( face.normal ).applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\toutput.setFloat32( offset, vector.x, true ); offset += 4; // normal\n\t\t\t\t\t\toutput.setFloat32( offset, vector.y, true ); offset += 4;\n\t\t\t\t\t\toutput.setFloat32( offset, vector.z, true ); offset += 4;\n\n\t\t\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t\t\tfor ( var k = 0; k < 3; k ++ ) {\n\n\t\t\t\t\t\t\tvector.copy( vertices[ indices[ k ] ] ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\t\toutput.setFloat32( offset, vector.x, true ); offset += 4; // vertices\n\t\t\t\t\t\t\toutput.setFloat32( offset, vector.y, true ); offset += 4;\n\t\t\t\t\t\t\toutput.setFloat32( offset, vector.z, true ); offset += 4;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutput.setUint16( offset, 0, true ); offset += 2; // attribute byte count\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\n\t\t\t} else {\n\n\t\t\t\tvar output = '';\n\n\t\t\t\toutput += 'solid exported\\n';\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar object = objects[ i ];\n\n\t\t\t\t\tvar vertices = object.geometry.vertices;\n\t\t\t\t\tvar faces = object.geometry.faces;\n\t\t\t\t\tvar matrixWorld = object.matrixWorld;\n\n\t\t\t\t\tnormalMatrixWorld.getNormalMatrix( matrixWorld );\n\n\t\t\t\t\tfor ( var j = 0, jl = faces.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar face = faces[ j ];\n\n\t\t\t\t\t\tvector.copy( face.normal ).applyMatrix3( normalMatrixWorld ).normalize();\n\n\t\t\t\t\t\toutput += '\\tfacet normal ' + vector.x + ' ' + vector.y + ' ' + vector.z + '\\n';\n\t\t\t\t\t\toutput += '\\t\\touter loop\\n';\n\n\t\t\t\t\t\tvar indices = [ face.a, face.b, face.c ];\n\n\t\t\t\t\t\tfor ( var k = 0; k < 3; k ++ ) {\n\n\t\t\t\t\t\t\tvector.copy( vertices[ indices[ k ] ] ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t\t\toutput += '\\t\\t\\tvertex ' + vector.x + ' ' + vector.y + ' ' + vector.z + '\\n';\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toutput += '\\t\\tendloop\\n';\n\t\t\t\t\t\toutput += '\\tendfacet\\n';\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toutput += 'endsolid exported\\n';\n\n\t\t\t\treturn output;\n\n\t\t\t}\n\n\t\t};\n\n\t}() )\n\n};\n\nexport { STLExporter };\n"],"names":["vector","normalMatrixWorld","STLExporter","prototype","constructor","parse","Vector3","Matrix3","scene","options","undefined","binary","objects","triangles","traverse","object","isMesh","geometry","isBufferGeometry","Geometry","fromBufferGeometry","isGeometry","faces","length","push","matrixWorld","offset","arrayBuffer","ArrayBuffer","output","DataView","setUint32","i","il","vertices","getNormalMatrix","j","jl","face","copy","normal","applyMatrix3","normalize","setFloat32","x","y","z","indices","a","b","c","k","applyMatrix4","setUint16"],"mappings":"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"}