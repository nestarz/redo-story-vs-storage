{"version":3,"file":"RenderPass.js","sources":["../../../../../node_modules/three/examples/jsm/postprocessing/RenderPass.js"],"sourcesContent":["/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nimport { Pass } from \"../postprocessing/Pass.js\";\n\nvar RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.clearDepth = false;\n\tthis.needsSwap = false;\n\n};\n\nRenderPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tvar oldClearColor, oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n} );\n\nexport { RenderPass };\n"],"names":["RenderPass","scene","camera","overrideMaterial","clearColor","clearAlpha","Pass","call","this","undefined","clear","clearDepth","needsSwap","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldClearColor","oldClearAlpha","oldOverrideMaterial","oldAutoClear","autoClear","getClearColor","getHex","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"mappings":"qFAOG,IAACA,EAAa,SAAWC,EAAOC,EAAQC,EAAkBC,EAAYC,GAExEC,EAAKC,KAAMC,MAEXA,KAAKP,MAAQA,EACbO,KAAKN,OAASA,EAEdM,KAAKL,iBAAmBA,EAExBK,KAAKJ,WAAaA,EAClBI,KAAKH,gBAA8BI,IAAfJ,EAA6BA,EAAa,EAE9DG,KAAKE,OAAQ,EACbF,KAAKG,YAAa,EAClBH,KAAKI,WAAY,GAIlBZ,EAAWa,UAAYC,OAAOC,OAAQD,OAAOE,OAAQV,EAAKO,WAAa,CAEtEI,YAAajB,EAEbkB,OAAQ,SAAWC,EAAUC,EAAaC,GAEzC,IAGIC,EAAeC,EAAeC,EAH9BC,EAAeN,EAASO,UAC5BP,EAASO,WAAY,OAIUjB,IAA1BD,KAAKL,mBAETqB,EAAsBhB,KAAKP,MAAME,iBAEjCK,KAAKP,MAAME,iBAAmBK,KAAKL,kBAI/BK,KAAKJ,aAETkB,EAAgBH,EAASQ,gBAAgBC,SACzCL,EAAgBJ,EAASU,gBAEzBV,EAASW,cAAetB,KAAKJ,WAAYI,KAAKH,aAI1CG,KAAKG,YAETQ,EAASR,aAIVQ,EAASY,gBAAiBvB,KAAKwB,eAAiB,KAAOX,GAGlDb,KAAKE,OAAQS,EAAST,MAAOS,EAASc,eAAgBd,EAASe,eAAgBf,EAASgB,kBAC7FhB,EAASD,OAAQV,KAAKP,MAAOO,KAAKN,QAE7BM,KAAKJ,YAETe,EAASW,cAAeR,EAAeC,QAITd,IAA1BD,KAAKL,mBAETK,KAAKP,MAAME,iBAAmBqB,GAI/BL,EAASO,UAAYD"}