{"version":3,"file":"Pass-571863b2.js","sources":["../../node_modules/three/examples/jsm/postprocessing/Pass.js"],"sourcesContent":["import {\n\tOrthographicCamera,\n\tPlaneBufferGeometry,\n\tMesh\n} from \"../../../build/three.module.js\";\n\nfunction Pass() {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\tthis.renderToScreen = false;\n\n}\n\nObject.assign( Pass.prototype, {\n\n\tsetSize: function ( /* width, height */ ) {},\n\n\trender: function ( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n} );\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nPass.FullScreenQuad = ( function () {\n\n\tvar camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tvar geometry = new PlaneBufferGeometry( 2, 2 );\n\n\tvar FullScreenQuad = function ( material ) {\n\n\t\tthis._mesh = new Mesh( geometry, material );\n\n\t};\n\n\tObject.defineProperty( FullScreenQuad.prototype, 'material', {\n\n\t\tget: function () {\n\n\t\t\treturn this._mesh.material;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._mesh.material = value;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( FullScreenQuad.prototype, {\n\n\t\tdispose: function () {\n\n\t\t\tthis._mesh.geometry.dispose();\n\n\t\t},\n\n\t\trender: function ( renderer ) {\n\n\t\t\trenderer.render( this._mesh, camera );\n\n\t\t}\n\n\t} );\n\n\treturn FullScreenQuad;\n\n} )();\n\nexport { Pass };\n"],"names":["Pass","this","enabled","needsSwap","clear","renderToScreen","camera","geometry","FullScreenQuad","Object","assign","prototype","setSize","render","console","error","OrthographicCamera","PlaneBufferGeometry","material","_mesh","Mesh","defineProperty","get","set","value","dispose","renderer"],"mappings":"oFAMA,SAASA,IAGRC,KAAKC,SAAU,EAGfD,KAAKE,WAAY,EAGjBF,KAAKG,OAAQ,EAGbH,KAAKI,gBAAiB,EAkBD,IAEjBC,EACAC,EAEAC,EAnBLC,OAAOC,OAAQV,EAAKW,UAAW,CAE9BC,QAAS,aAETC,OAAQ,WAEPC,QAAQC,MAAO,iEAQjBf,EAAKQ,gBAEAF,EAAS,IAAIU,GAAsB,EAAG,EAAG,GAAK,EAAG,EAAG,GACpDT,EAAW,IAAIU,EAAqB,EAAG,GAEvCT,EAAiB,SAAWU,GAE/BjB,KAAKkB,MAAQ,IAAIC,EAAMb,EAAUW,IAIlCT,OAAOY,eAAgBb,EAAeG,UAAW,WAAY,CAE5DW,IAAK,WAEJ,OAAOrB,KAAKkB,MAAMD,UAInBK,IAAK,SAAWC,GAEfvB,KAAKkB,MAAMD,SAAWM,KAMxBf,OAAOC,OAAQF,EAAeG,UAAW,CAExCc,QAAS,WAERxB,KAAKkB,MAAMZ,SAASkB,WAIrBZ,OAAQ,SAAWa,GAElBA,EAASb,OAAQZ,KAAKkB,MAAOb,MAMxBE"}